trigger:
  branches:
    include: 
    - master
variables:
  buildConfiguration: 'Release'
  location: 'uksouth'
  rgName: 'notestokey'
  webAppName: 'notestokey'

stages:
- stage: BuildWindowsTestFilesAndTest
  displayName: Build Windows Files and Run Unit Tests
  jobs:
  - job: BuildWindowsTestFilesAndRunTests
    displayName: Build Windows Test Files and Run Unit Tests
    pool:
      vmImage: 'windows-latest'
    
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore Unit Tests
      inputs:
        command: 'restore'
        projects: '$(System.DefaultWorkingDirectory)\**\*Unit.Test.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: Build Unit Tests
      inputs:
        command: 'build'
        projects: '$(System.DefaultWorkingDirectory)\**\*Unit.Test.csproj'
      
    - task: VSTest@3
      displayName: Run Unit Tests
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
          !**\testhost*.*
          !**\Microsoft*.dll
        searchFolder: '$(System.DefaultWorkingDirectory)'
        runOnlyImpactedTests: false
        
    - task: AzureKeyVault@2
      displayName: Retrieve Staging Database ConnectionString
      inputs:
        azureSubscription: 'campbe11sean root(c5d140d4-4130-4229-9fc9-025261099893)'
        KeyVaultName: 'DeploymentSecretsKeyify'
        SecretsFilter: 'stagingDatabaseConnectionString'
        RunAsPreJob: true
        
    - task: PowerShell@2
      displayName: Set Database ConnectionString
      inputs:
        targetType: 'inline'
        script: | 
          Write-Host ("##vso[task.setvariable variable=databaseConnectionString]$(stagingDatabaseConnectionString)")

    - task: DotNetCoreCLI@2
      displayName: Restore DbUp Projects
      inputs:
        command: 'restore'
        projects: '$(System.DefaultWorkingDirectory)\**\Keyify.Database.DbUp*.csproj'

    - task: CmdLine@2
      displayName: Show me the directories!
      inputs:
        script: |
          echo "Structure of work folder of this pipeline:"
          tree $(Agent.WorkFolder)\1 /f
          
          echo "Build.ArtifactStagingDirectory:" 
          
          echo "$(Build.ArtifactStagingDirectory)"
          
          echo "Build.BinariesDirectory:" 
          
          echo "$(Build.BinariesDirectory)"
          
          echo "Build.SourcesDirectory:"
          
          echo "$(Build.SourcesDirectory)"

    - task: DotNetCoreCLI@2
      displayName: Build DbUp Project
      inputs:
        command: 'build'
        projects: '$(System.DefaultWorkingDirectory)\**\Keyify.Database.DbUp*.csproj'

    - task: CmdLine@2
      displayName: Show me the directories!
      inputs:
        script: |
          echo "Structure of work folder of this pipeline:"
          tree $(Agent.WorkFolder)\1 /f
          
          echo "Build.ArtifactStagingDirectory:" 
          
          echo "$(Build.ArtifactStagingDirectory)"
          
          echo "Build.BinariesDirectory:" 
          
          echo "$(Build.BinariesDirectory)"
          
          echo "Build.SourcesDirectory:"
          
          echo "$(Build.SourcesDirectory)"

    - task: DotNetCoreCLI@2
      displayName: Run DbUp Project
      inputs:
        azureSubscription: 'campbe11sean root(c5d140d4-4130-4229-9fc9-025261099893)'
        command: 'run'
        projects: '$(System.DefaultWorkingDirectory)\**\Keyify.Database.DbUp.csproj'
        arguments: '"$(stagingDatabaseConnectionString)"'

    - task: DotNetCoreCLI@2
      displayName: Build Keyify.Web
      inputs:
        command: 'build'
        projects: '**/Keyify.Web.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '$(System.DefaultWorkingDirectory)\**\*Web.csproj'
        publishWebProjects: true

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'campbe11sean root(c5d140d4-4130-4229-9fc9-025261099893)'
        appType: 'webApp'
        appName: $(webAppName)
        resourceGroupName: $(rgName)
        package: '$(System.DefaultWorkingDirectory)/**/*.zip'